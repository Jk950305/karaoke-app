[{"/Users/jonkim/Desktop/TestApp/Karaoke/client/src/App.js":"1","/Users/jonkim/Desktop/TestApp/Karaoke/client/src/index.js":"2","/Users/jonkim/Desktop/TestApp/Karaoke/client/src/components/Navigation.jsx":"3","/Users/jonkim/Desktop/TestApp/Karaoke/client/src/components/Karaoke.jsx":"4","/Users/jonkim/Desktop/TestApp/Karaoke/client/src/components/FilenameLabel.jsx":"5","/Users/jonkim/Desktop/TestApp/Karaoke/client/src/components/ErrorAlert.jsx":"6","/Users/jonkim/Desktop/TestApp/Karaoke/client/src/lib/AudioPlayer.js":"7","/Users/jonkim/Desktop/TestApp/Karaoke/client/src/vendor/soundtouch.js":"8"},{"size":850,"mtime":1611184194100,"results":"9","hashOfConfig":"10"},{"size":255,"mtime":1611164453253,"results":"11","hashOfConfig":"10"},{"size":223,"mtime":1611178768331,"results":"12","hashOfConfig":"10"},{"size":15250,"mtime":1611185445150,"results":"13","hashOfConfig":"10"},{"size":614,"mtime":1611091666933,"results":"14","hashOfConfig":"10"},{"size":300,"mtime":1608685530806,"results":"15","hashOfConfig":"10"},{"size":3226,"mtime":1611180294661,"results":"16","hashOfConfig":"10"},{"size":36422,"mtime":1610498576865,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"13x55vx",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonkim/Desktop/TestApp/Karaoke/client/src/App.js",["37","38","39","40"],"import React, { Component } from 'react';\nimport './App.css';\n\nimport Navigation from './components/Navigation.jsx';\nimport Karaoke from './components/Karaoke.jsx';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nclass App extends Component {\n  \nrender() {\n    return (\n        <div className=\"App\">\n            <div>\n                <div>\n                    <Karaoke/>\n                    {/*<BrowserRouter>\n                        <div>\n                            <Navigation />\n                            <Switch>\n                                <Route path=\"/\" component={Karaoke} exact/>\n                            </Switch>\n                        </div> \n                    </BrowserRouter>\n                */}\n                </div>\n            </div>\n            <hr/>\n        </div>\n    );\n  }\n}\n\nexport default App;",["41","42"],"/Users/jonkim/Desktop/TestApp/Karaoke/client/src/index.js",[],"/Users/jonkim/Desktop/TestApp/Karaoke/client/src/components/Navigation.jsx",[],"/Users/jonkim/Desktop/TestApp/Karaoke/client/src/components/Karaoke.jsx",["43"],"import FilenameLabel from'./FilenameLabel.jsx';\nimport ErrorAlert from'./ErrorAlert.jsx';\n\nconst EventEmitter = require('events').EventEmitter;\nconst React = require('react');\nconst AudioPlayer = require('./../lib/AudioPlayer');\n\nclass Karaoke extends React.Component {\n\n\tconstructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.state = {\n            action: 'stop',\n            duration: undefined,\n            error: undefined,\n            filename: undefined,\n            pitch: 1.0,\n            key: 0,\n            simpleFilter: undefined,\n            status: [],\n            t: 0,\n            tempo: 1.0,\n            file: \"\",\n            showPL : false,\n            savedMusic: [],\n            yt_title: \"\",\n            yt_list: [],\n        };\n\n        //create an observer\n        this.emitter = new EventEmitter();\n        this.emitter.on('state', state => this.setState(state));\n        this.emitter.on('status', status => {\n            if (status === 'Done!') {\n                this.setState({status: []});\n            } else {\n                this.setState({status: this.state.status.concat(status)});\n            }\n        });\n        this.emitter.on('stop', () => this.stop());\n\n\n        //create an audio player\n        this.audioPlayer = new AudioPlayer({\n            emitter: this.emitter,\n            pitch: this.state.pitch,\n            tempo: this.state.tempo,\n        });\n\n        //initialize in-app helper variables and functions\n        this.inputRef = React.createRef();\n        this.handleSeek = this.handleSeek.bind(this);\n        this.handleTitle = this.handleTitle.bind(this);\n        this.loadFile = this.loadFile.bind(this);\n        this.prev = 0;\n    }\n\n/* React Page related methods */\n    //At the beginning of the app\n    componentDidMount() {\n        this.stop();\n        this.getMusicList();\n    }\n    //At the end of the app\n    componentWillUnmount() {\n        this.stop();\n    }\n\n    //only gets called from video player\n    play() {\n        if (this.state.action !== 'play') {\n            this.audioPlayer.play();\n            this.setState({action: 'play'});\n            this.ref.current.playbackRate = this.state.tempo;\n        }\n    }\n\n/* Video&Audio player methods */\n    //called iff video player is paused\n    pause() {\n        if (this.state.action === 'play') {\n            this.audioPlayer.pause();\n            this.setState({action: 'pause'});\n        }\n    }\n    //gets called when video player onStop()\n    stop() {\n        this.pause();\n        this.audioPlayer.seekPercent(0);\n        this.setState({action: 'stop', t: 0});\n        this.ref.current.currentTime = 0;\n        this.ref.current.pause();\n    }\n    //get file inputs from user to be played\n    handleFileChange(e) {\n        this.setState({showPL : false});\n        if (e.target.files.length > 0) {\n            const filename = e.target.value.replace('C:\\\\fakepath\\\\', '');\n            const file = e.target.files[0];\n            this.loadFile(file,filename);\n        }\n    }\n    //handle seek in video player\n    handleSeek(e) {\n        e.preventDefault();\n        var current = this.ref.current.currentTime;\n        if(current<this.prev-0.5*this.state.tempo || this.prev+0.5*this.state.tempo<current){\n            const percent = this.ref.current.currentTime/this.state.duration*100;\n            this.audioPlayer.seekPercent(percent);\n            this.play();\n        }\n        this.prev = current;\n    }\n    //load file and play blob on both audio & video\n    loadFile(file,filename) {\n        this.stop();\n        this.emitter.emit('status', 'Reading file...');\n        this.emitter.emit('state', {\n            error: undefined,\n            filename: undefined,\n        });\n        this.emitter.emit('state', {filename});\n        var fileURL = URL.createObjectURL(file);\n        this.setState({file : fileURL});\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onload = async event => {\n            this.emitter.emit('status', 'Playing file...');\n            let buffer;\n            try {\n                buffer = await this.audioPlayer.decodeAudioData(event.target.result);\n            } catch (err) {\n                this.emitter.emit('state', {\n                    error: {\n                        message: err.message,\n                        type: 'Decoding error',\n                    },\n                });\n                return;\n            }\n            this.audioPlayer.setBuffer(buffer);\n        };\n        this.stop();\n    }\n\n\n/* API related methods */\n    //get list of saved music on server and save them in savedMusic \n    getMusicList(){\n        this.setState({savedMusic:[]});\n        this.getFiles().then(res => {\n            for(var i=0;i<res.music.length;i++){\n                this.setState({ savedMusic : this.state.savedMusic.concat(res.music[i].filename) });\n            }\n        }).catch(err => console.log(err));\n\n    }\n    //get music filenames from server\n    getFiles = async () => {\n        const response = await fetch('/api/files');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    //send title to be searched to server and get <= 10 short videos \n    async searchOnYoutube(e) {\n        e.preventDefault();\n        var title = e.target[0].value;\n        const response = await fetch('/api/youtubeSearch?title='+title);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        this.setState({yt_list: body});\n        this.stop();\n    };\n\n\n    //clear media and get new media blob\n    async getMedia(e,yt_title,yt_url){\n        e.preventDefault();\n        this.setState({yt_list:[],yt_title:\"\"});\n        await this.getMusic(yt_url,yt_title);\n    }\n    //send a saved music filename and receive blob of the music\n    async getSavedMusic(e) {\n        e.preventDefault();\n        var filename = e.target.outerText+\".mp4\";\n        this.getMusic(\"\",filename);\n    }\n    //get video blob\n    async getMusic(yt_url,yt_title) {\n        this.setState({showPL:false});\n        var file;\n\n        var url = (yt_url===\"\")?('/api/savedMusic?file='+yt_title):('/api/music?url='+yt_url+'&title='+yt_title);\n\n        await fetch( url, {\n            method: 'GET',\n            headers: {},\n        }).then(function (response) {\n            return response.blob();\n        }).then(function(blob) {\n            file = blob;\n        }).catch(error => {});\n        this.loadFile(file,yt_title);\n    }\n\n\n/* HTML related methods */\n    //toggle the list of saved music\n    showPlaylist(e){\n        e.preventDefault();\n        this.setState({showPL : this.state.savedMusic.length>0});\n    }\n    hidePlaylist(e){\n        e.preventDefault();\n        this.setState({showPL : false});\n    }\n\n    //handle input text for title of youtube in search box\n    handleTitle(e){\n        this.setState({yt_title : e.target.value});\n    }\n\n\n/* Soundsource related methods */\n    //get adjusted pitch value\n    handlePitchChange(e) {\n        const pitch = this.getPitchValue(e.target.value);\n        this.audioPlayer.pitch = pitch;\n        this.setState({pitch});\n    }\n    decreasePitch(e){\n    \tif(this.state.pitch > 0.5 && this.state.pitch <= 2){\n    \t\tconst key = this.state.key-1;\n    \t\tconst pitch = this.getPitchValue(key);\n\t        this.audioPlayer.pitch = pitch;\n\t        this.setState({key});\n\t        this.setState({pitch});\n    \t}\n    }\n    increasePitch(e){\n    \tif(this.state.pitch >= 0.5 && this.state.pitch < 2){\n    \t\tconst key = this.state.key+1;\n    \t\tconst pitch = this.getPitchValue(key);\n\t        this.audioPlayer.pitch = pitch;\n\t        this.setState({key});\n\t        this.setState({pitch});\n    \t}\n    }\n    getPitchValue(val) {\n        var s_var = (val>=0)?(parseInt(val)):(12+parseInt(val));\n        //https://en.wikipedia.org/wiki/12_equal_temperament\n        var num = Math.pow(2, (s_var/12)).toFixed(3);\n        const pitch = (val>=0)?(num):(num/2);\n        return pitch;\n    }\n\n    //Handle Tempo Changes \n    handleTempoChange(e) {\n        const tempo = e.target.value;\n        this.audioPlayer.tempo = tempo;\n        this.setState({tempo});\n    }\n    decreaseTempo(e) {\n    \tif(this.state.tempo > 0.5 && this.state.tempo <= 2){\n            const tempo = +(Math.round(this.state.tempo-0.1 + \"e+2\")  + \"e-2\");\n            console.log(tempo);\n\t        this.audioPlayer.tempo = tempo;\n\t        this.setState({tempo});\n            this.ref.current.playbackRate = tempo;\n    \t}\n    }\n    increaseTempo(e) {\n        if(this.state.tempo >= 0.5 && this.state.tempo < 2){\n    \t\tconst tempo = +(Math.round(this.state.tempo+0.1 + \"e+2\")  + \"e-2\");\n\t        this.audioPlayer.tempo = tempo;\n\t        this.setState({tempo});\n            this.ref.current.playbackRate = tempo;\n    \t}\n    }\n\n\n\n\trender (){\n        //create a table of saved music\n        var items = [];\n        for(const [key, value] of this.state.savedMusic.entries()){\n            items.push(<tr><td><a href=\"#header\" key={key} onClick={e => this.getSavedMusic(e)}>{value.substring(0,value.indexOf('.'))}</a></td></tr>);\n        }\n\n        //create a list of youtube search results\n        var yt_list = [];\n        for(const [key,value] of this.state.yt_list.entries()){\n            yt_list.push(<tr><td>\n                <div className=\"yt_element\" onClick={e => this.getMedia(e,value.title,value.url)}>\n                    <div className=\"yt_thumb\">\n                        <img src={value.thumbnail} alt=\"\" className=\"yt_image\"/>\n                        <p className=\"yt_time\">({value.time})</p>\n                    </div>\n                    <div className=\"yt_info\">\n                        <p className=\"yt_title\">{value.title}</p>\n                        <p className=\"yt_author\">{value.author}</p> \n                    </div>\n                </div></td></tr>\n            );\n        }\n\n\t  \treturn (\n\n\t  \t\t<div className=\"Karaoke\">\n                <div id=\"header\" className=\"row title_header alert alert-info\">\n\t  \t\t  \t    무한코인노래방\n                </div>\n\n                <div className=\"row\" style={{marginBottom: '1em', marginLeft:'auto', marginRight:'auto'}}>\n                    <label\n                        className=\"btn btn-primary btn-md\"\n                        htmlFor=\"upload-file\"\n                        style={{marginRight: '0.25em', marginBottom: '1em'}}\n                    >\n                        <input\n                            id=\"upload-file\"\n                            accept=\"audio\"\n                            type=\"file\"\n                            style={{display: 'none'}}\n                            onChange={e => this.handleFileChange(e)}\n                        />\n                        Upload from Your Device\n                    </label>\n                    <button\n                        className=\"btn btn-primary btn-md\"\n                        style={{marginLeft: '0.25em',marginBottom: '1em', display: (this.state.savedMusic.length>0)?(''):('none')}}\n                        id=\"choose-file\"\n                        onClick={(this.state.showPL)?(e => this.hidePlaylist(e)):(e => this.showPlaylist(e))}\n                    >\n                        {(!this.state.showPL)?('Show Saved Music'):('Hide Saved Music')}\n                    </button>\n\n\n                </div>\n\n                <div className=\"row\">\n                    <form onSubmit={e => this.searchOnYoutube(e)} >\n                        <input id=\"yt_title\" value={this.state.yt_title} onChange={e => this.handleTitle(e)} type=\"text\" placeholder=\"Search on Youtube\" className=\"form-control\"/>\n                        <input type=\"submit\" className=\"btn btn-danger btn-md\" value=\"Search\"/>\n                    </form>\n                </div>\n\n                <ErrorAlert error={this.state.error} />\n\n                \n                 \n                <div className=\"row\" style={{display : (this.state.showPL)?( 'initial' ):( 'none' )}}>\n                    <hr/>\n                    <div className=\"row\">\n                        <table className=\"music_table table table-hover\">\n                            <tbody>\n                                {items}\n                            </tbody>\n                        </table>\n                        <p onClick={this.hidePlaylist.bind(this)} style={{float: 'right',fontSize:'10px'}} >close</p>\n                    </div>\n                    \n                </div>\n            \n\n                <div className=\"yt_table\" style={{display: (this.state.yt_list.length>0)?('initial'):('none')}}>\n                    <hr/> \n                    <div className=\"row\">\n                        <div className=\"row\">\n                            <table className=\" table table-hover\">\n                                <tbody>\n                                        {yt_list}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div style={{display: (this.state.action!=='load')?('initial'):('none')}}>\n                    <hr/> \n                    <div className=\"row\">\n                        <FilenameLabel error={this.state.error} filename={this.state.filename} />\n                        <div>\n                            <video muted ref={this.ref} src={this.state.file} id=\"my-video\" className=\"vid\" controls onTimeUpdate={e => this.handleSeek(e)} onPlay={this.play.bind(this)} onPause={this.pause.bind(this)} controlsList=\"nodownload\" disablePictureInPicture>\n                            </video>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"controls\">\n                            <button type=\"button\" onClick={e => this.decreasePitch(e)} className=\"btn btns btn-secondary\"> - </button>\n                            \n                            <p className=\"tagg\"> Pitch ({ (this.state.key<0)?(this.state.key):(\"+\"+this.state.key) } key) </p>\n                            \n                            <button type=\"button\" onClick={e => this.increasePitch(e)} className=\"btn btns btn-secondary\"> + </button>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"controls\">\n                            <button type=\"button\" onClick={e => this.decreaseTempo(e)} className=\"btn btns btn-secondary\"> - </button>\n                            \n                            <p className=\"tagg\"> Tempo ({ parseFloat(this.state.tempo).toFixed(1) }x) </p>\n                            \n                            <button type=\"button\" onClick={e => this.increaseTempo(e)} className=\"btn btns btn-secondary\"> + </button>\n                        </div>\n                    </div>\n                </div>\n                <div style={{width:'100%', display: (this.state.action==='load')?('initial'):('none')}}>\n                    <img src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\" style={{ width:'50%',marginLeft:'25%', marginRight:'25%'}} alt=\"loading...\" />\n                </div>\n\t\t    </div>\n\n\t    )\n\t}\n\n}\n\nexport default Karaoke;\n","/Users/jonkim/Desktop/TestApp/Karaoke/client/src/components/FilenameLabel.jsx",[],"/Users/jonkim/Desktop/TestApp/Karaoke/client/src/components/ErrorAlert.jsx",[],"/Users/jonkim/Desktop/TestApp/Karaoke/client/src/lib/AudioPlayer.js",[],"/Users/jonkim/Desktop/TestApp/Karaoke/client/src/vendor/soundtouch.js",[],{"ruleId":"44","severity":1,"message":"45","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":18},{"ruleId":"44","severity":1,"message":"48","line":6,"column":10,"nodeType":"46","messageId":"47","endLine":6,"endColumn":23},{"ruleId":"44","severity":1,"message":"49","line":6,"column":25,"nodeType":"46","messageId":"47","endLine":6,"endColumn":30},{"ruleId":"44","severity":1,"message":"50","line":6,"column":32,"nodeType":"46","messageId":"47","endLine":6,"endColumn":38},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"44","severity":1,"message":"55","line":295,"column":20,"nodeType":"46","messageId":"47","endLine":295,"endColumn":23},"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"'key' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]