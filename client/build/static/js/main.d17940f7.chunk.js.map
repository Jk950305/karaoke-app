{"version":3,"sources":["lib/AudioPlayer.js","vendor/soundtouch.js","components/FilenameLabel.jsx","components/ErrorAlert.jsx","components/Karaoke.jsx","App.js","index.js"],"names":["require","SimpleFilter","SoundTouch","BUFFER_SIZE","AudioPlayer","emitter","pitch","tempo","this","context","AudioContext","scriptProcessor","createScriptProcessor","onaudioprocess","e","l","outputBuffer","getChannelData","r","simpleFilter","framesExtracted","extract","samples","emit","i","soundTouch","duration","undefined","data","decodeAudioData","buffer","ref","createBufferSource","Float32Array","source","target","numFrames","position","t","sampleRate","Math","min","length","resume","connect","destination","disconnect","percent","sourcePosition","round","module","exports","extend","a","b","g","__lookupGetter__","s","__lookupSetter__","__defineGetter__","__defineSetter__","testFloatEqual","AbstractFifoSamplePipe","createBuffers","inputBuffer","FifoSampleBuffer","RateTransposer","call","_reset","rate","_vector","_position","_frameCount","FilterSupport","pipe","_pipe","sourceSound","historyBufferSize","_sourcePosition","outputBufferPosition","prototype","_inputBuffer","_outputBuffer","clear","_rate","slopeCount","prevSampleL","prevSampleR","clone","result","process","frameCount","ensureAdditionalCapacity","numFramesOutput","_transpose","receive","put","src","vector","srcOffset","startIndex","dest","destOffset","endIndex","used","out","srcIndex","rewind","putSamples","sourceOffset","numSamples","ensureCapacity","set","subarray","putBuffer","receiveSamples","output","minLength","newVector","fillOutputBuffer","numInputFrames","fillInputBuffer","RangeError","newOutputBufferPosition","numFramesExtracted","currentFrames","max","handleSampleData","_SCAN_OFFSETS","AUTOSEEK_K","Stretch","bQuickSeek","bMidBufferDirty","pMidBuffer","overlapLength","bAutoSeqSetting","bAutoSeekSetting","_tempo","setParameters","rateTransposer","tdStretch","_intermediateBuffer","virtualPitch","virtualRate","virtualTempo","_calculateEffectiveRateAndTempo","_clearMidBuffer","aSampleRate","aSequenceMS","aSeekWindowMS","aOverlapMS","overlapMs","sequenceMs","seekWindowMs","calcSeqParameters","calculateOverlapLength","newTempo","intskip","nominalSkip","seekWindowLength","skipFract","floor","sampleReq","seekLength","overlapInMsec","newOvl","pRefMidBuffer","checkLimits","x","mi","ma","seq","seek","AUTOSEQ_AT_MIN","AUTOSEEK_AT_MIN","enable","seekBestOverlapPosition","seekBestOverlapPositionStereoQuick","seekBestOverlapPositionStereo","bestOffs","bestCorr","corr","precalcCorrReferenceStereo","Number","MIN_VALUE","calcCrossCorrStereo","j","scanCount","corrOffset","tempOffset","cnt2","temp","mixingPos","compare","mixingOffset","mixing","overlap","ovlPos","overlapStereo","pInputPos","pInput","fTemp","fScale","fi","pInputOffset","pOutputOffset","pOutput","pOutputPos","ovlSkip","offset","start","rateChange","tempoChange","pitchOctaves","exp","pitchSemitones","previousTempo","previousRate","classNames","FilenameLabel","props","filename","classes","error","push","title","charAt","substring","indexOf","className","ErrorAlert","type","message","EventEmitter","React","Karaoke","getFiles","fetch","response","json","body","status","Error","createRef","state","action","key","file","showPL","savedMusic","yt_title","yt_list","on","setState","concat","stop","audioPlayer","inputRef","handleSeek","bind","handleTitle","loadFile","prev","getMusicList","play","current","playbackRate","pause","seekPercent","currentTime","files","value","replace","preventDefault","fileURL","URL","createObjectURL","reader","FileReader","readAsArrayBuffer","onload","event","setBuffer","then","res","music","catch","err","console","log","yt_url","getMusic","outerText","url","method","headers","blob","getPitchValue","val","s_var","parseInt","num","pow","toFixed","items","entries","href","onClick","getSavedMusic","getMedia","thumbnail","alt","time","author","id","style","marginBottom","marginLeft","marginRight","htmlFor","accept","display","onChange","handleFileChange","hidePlaylist","showPlaylist","onSubmit","searchOnYoutube","placeholder","float","fontSize","muted","controls","onTimeUpdate","onPlay","onPause","controlsList","disablePictureInPicture","decreasePitch","increasePitch","decreaseTempo","parseFloat","increaseTempo","width","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d17940f7.chunk.js","sourcesContent":["const {SimpleFilter, SoundTouch} = require('../vendor/soundtouch');\nconst BUFFER_SIZE = 4096;\n\n//https://developer.mozilla.org/en-US/docs/Web/Guide/Audio_and_video_manipulation\nclass AudioPlayer {\n    constructor({emitter, pitch, tempo}) {\n        this.emitter = emitter;\n        this.context = new AudioContext();\n        this.scriptProcessor = this.context.createScriptProcessor(BUFFER_SIZE, 2, 2);\n        this.scriptProcessor.onaudioprocess = e => {\n            const l = e.outputBuffer.getChannelData(0);\n            const r = e.outputBuffer.getChannelData(1);\n            if(this.simpleFilter!=null){\n                const framesExtracted = this.simpleFilter.extract(this.samples, BUFFER_SIZE);\n                if (framesExtracted === 0) {\n                    this.emitter.emit('stop');\n                }\n                for (let i = 0; i < framesExtracted; i++) {\n                    l[i] = this.samples[i * 2];\n                    r[i] = this.samples[i * 2 + 1];\n                }\n            }\n        };\n\n        this.soundTouch = new SoundTouch();\n        this.soundTouch.pitch = pitch;\n        this.soundTouch.tempo = tempo;\n\n        this.duration = undefined;\n    }\n\n    //get and set pitch value\n    get pitch() {\n        return this.soundTouch.pitch;\n    }\n    set pitch(pitch) {\n        this.soundTouch.pitch = pitch;\n    }\n\n    //get and set tempo value\n    get tempo() {\n        return this.soundTouch.tempo;\n    }\n    set tempo(tempo) {\n        this.soundTouch.tempo = tempo;\n    }\n\n    //decode audio data and set buffer\n    decodeAudioData(data) {\n        return this.context.decodeAudioData(data);\n    }\n\n    //create a buffer source from given data and send info to observer\n    setBuffer(buffer,ref) {\n        const bufferSource = this.context.createBufferSource();\n        bufferSource.buffer = buffer;\n\n        this.samples = new Float32Array(BUFFER_SIZE * 2);\n        this.source = {\n            extract: (target, numFrames, position) => {\n                this.emitter.emit('state', {t: position / this.context.sampleRate});\n                const l = buffer.getChannelData(0);\n                const r = buffer.getChannelData(1);\n                for (let i = 0; i < numFrames; i++) {\n                    target[i * 2] = l[i + position];\n                    target[i * 2 + 1] = r[i + position];\n                }\n                return Math.min(numFrames, l.length - position);\n            },\n        };\n        this.simpleFilter = new SimpleFilter(this.source, this.soundTouch);\n\n        this.duration = buffer.duration;\n        this.emitter.emit('state', {duration: buffer.duration});\n    }\n\n    //play and pause audio\n    play() {\n        this.context.resume();\n        this.scriptProcessor.connect(this.context.destination);\n    }\n    pause() {\n        this.context.resume();\n        this.scriptProcessor.disconnect(this.context.destination);\n    }\n\n    //set current source position to requested percentage of the full-length \n    seekPercent(percent) {\n        if (this.simpleFilter !== undefined) {\n            this.simpleFilter.sourcePosition = Math.round(\n                percent / 100 * this.duration * this.context.sampleRate\n            );\n        }\n    }\n}\n\nmodule.exports = AudioPlayer;\n","/*\n* SoundTouch JS audio processing library\n* Copyright (c) Olli Parviainen\n* Copyright (c) Ryan Berdeen\n*\n* This library is free software; you can redistribute it and/or\n* modify it under the terms of the GNU Lesser General Public\n* License as published by the Free Software Foundation; either\n* version 2.1 of the License, or (at your option) any later version.\n*\n* This library is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n* Lesser General License for more details.\n*\n* You should have received a copy of the GNU Lesser General Public\n* License along with this library; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\nfunction extend(a,b) {\n    for ( var i in b ) {\n        var g = b.__lookupGetter__(i), s = b.__lookupSetter__(i);\n       \n        if ( g || s ) {\n            if ( g )\n                a.__defineGetter__(i, g);\n            if ( s )\n                a.__defineSetter__(i, s);\n         } else\n             a[i] = b[i];\n    }\n    return a;\n}\n\nfunction testFloatEqual(a, b) {\n    return (a > b ? a - b : b - a) > 1e-10;\n}\n/*\n* SoundTouch JS audio processing library\n* Copyright (c) Olli Parviainen\n* Copyright (c) Ryan Berdeen\n*\n* This library is free software; you can redistribute it and/or\n* modify it under the terms of the GNU Lesser General Public\n* License as published by the Free Software Foundation; either\n* version 2.1 of the License, or (at your option) any later version.\n*\n* This library is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n* Lesser General License for more details.\n*\n* You should have received a copy of the GNU Lesser General Public\n* License along with this library; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\n\nfunction AbstractFifoSamplePipe(createBuffers) {\n    if (createBuffers) {\n        this.inputBuffer = new FifoSampleBuffer();\n        this.outputBuffer = new FifoSampleBuffer();\n    }\n    else {\n        this.inputBuffer = this.outputBuffer = null;\n    }\n}\n        \nAbstractFifoSamplePipe.prototype = {\n    get inputBuffer() {\n        return this._inputBuffer;\n    },\n\n    set inputBuffer (inputBuffer) {\n      this._inputBuffer = inputBuffer;\n    },\n\n    get outputBuffer() {\n        return this._outputBuffer;\n    },\n\n    set outputBuffer(outputBuffer) {\n      this._outputBuffer = outputBuffer;\n    },\n\n    clear: function () {\n        this._inputBuffer.clear();\n        this._outputBuffer.clear();\n    }\n};\n/*\n* SoundTouch JS audio processing library\n* Copyright (c) Olli Parviainen\n* Copyright (c) Ryan Berdeen\n*\n* This library is free software; you can redistribute it and/or\n* modify it under the terms of the GNU Lesser General Public\n* License as published by the Free Software Foundation; either\n* version 2.1 of the License, or (at your option) any later version.\n*\n* This library is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n* Lesser General License for more details.\n*\n* You should have received a copy of the GNU Lesser General Public\n* License along with this library; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\nfunction RateTransposer(createBuffers) {\n    AbstractFifoSamplePipe.call(this, createBuffers);\n    this._reset();\n    this.rate = 1;\n}\n\nextend(RateTransposer.prototype, AbstractFifoSamplePipe.prototype);\nextend(RateTransposer.prototype, {\n    set rate(rate) {\n        this._rate = rate;\n        // TODO aa filter\n    },\n\n    _reset: function () {\n        this.slopeCount = 0;\n        this.prevSampleL = 0;\n        this.prevSampleR = 0;\n    },\n\n    clone: function () {\n        var result = new RateTransposer();\n        result.rate = this._rate;\n        return result;\n    },\n\n    process: function () {\n        // TODO aa filter\n        var numFrames = this._inputBuffer.frameCount;\n        this._outputBuffer.ensureAdditionalCapacity(numFrames / this._rate + 1);\n        var numFramesOutput = this._transpose(numFrames);\n        this._inputBuffer.receive();\n        this._outputBuffer.put(numFramesOutput);\n    },\n\n    _transpose: function (numFrames) {\n        if (numFrames === 0) {\n            // no work\n            return 0;\n        }\n\n        var src = this._inputBuffer.vector;\n        var srcOffset = this._inputBuffer.startIndex;\n\n        var dest = this._outputBuffer.vector;\n        var destOffset = this._outputBuffer.endIndex;\n\n        var used = 0;\n        var i = 0;\n\n        while(this.slopeCount < 1.0) {\n            dest[destOffset + 2 * i] = (1.0 - this.slopeCount) * this.prevSampleL + this.slopeCount * src[srcOffset];\n            dest[destOffset + 2 * i + 1] = (1.0 - this.slopeCount) * this.prevSampleR + this.slopeCount * src[srcOffset + 1];\n            i++;\n            this.slopeCount += this._rate;\n        }\n\n        this.slopeCount -= 1.0;\n\n        if (numFrames !== 1) {\n            out: while (true) {\n                while (this.slopeCount > 1.0) {\n                    this.slopeCount -= 1.0;\n                    used++;\n                    if (used >= numFrames - 1) {\n                        break out;\n                    }\n                }\n\n                var srcIndex = srcOffset + 2 * used;\n                dest[destOffset + 2 * i] = (1.0 - this.slopeCount) * src[srcIndex] + this.slopeCount * src[srcIndex + 2];\n                dest[destOffset + 2 * i + 1] = (1.0 - this.slopeCount) * src[srcIndex + 1] + this.slopeCount * src[srcIndex + 3];\n\n                i++;\n                this.slopeCount += this._rate;\n            }\n        }\n\n        this.prevSampleL = src[srcOffset + 2 * numFrames - 2];\n        this.prevSampleR = src[srcOffset + 2 * numFrames - 1];\n\n        return i;\n    }\n});\n/*\n* SoundTouch JS audio processing library\n* Copyright (c) Olli Parviainen\n* Copyright (c) Ryan Berdeen\n*\n* This library is free software; you can redistribute it and/or\n* modify it under the terms of the GNU Lesser General Public\n* License as published by the Free Software Foundation; either\n* version 2.1 of the License, or (at your option) any later version.\n*\n* This library is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n* Lesser General License for more details.\n*\n* You should have received a copy of the GNU Lesser General Public\n* License along with this library; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\nfunction FifoSampleBuffer() {\n    this._vector = new Float32Array();\n    this._position = 0;\n    this._frameCount = 0;\n}\n\nFifoSampleBuffer.prototype = {\n    get vector() {\n        return this._vector;\n    },\n\n    get position() {\n        return this._position;\n    },\n\n    get startIndex() {\n        return this._position * 2;\n    },\n\n    get frameCount() {\n        return this._frameCount;\n    },\n\n    get endIndex() {\n        return (this._position + this._frameCount) * 2;\n    },\n\n    clear: function() {\n        this.receive(this._frameCount);\n        this.rewind();\n    },\n\n    put: function (numFrames) {\n        this._frameCount += numFrames;\n    },\n\n    putSamples: function (samples, position, numFrames) {\n        position = position || 0;\n        var sourceOffset = position * 2;\n        if (!(numFrames >= 0)) {\n            numFrames = (samples.length - sourceOffset) / 2;\n        }\n        var numSamples = numFrames * 2;\n\n        this.ensureCapacity(numFrames + this._frameCount);\n\n        var destOffset = this.endIndex;\n        this._vector.set(samples.subarray(sourceOffset, sourceOffset + numSamples), destOffset);\n\n        this._frameCount += numFrames;\n    },\n\n    putBuffer: function (buffer, position, numFrames) {\n        position = position || 0;\n        if (!(numFrames >= 0)) {\n            numFrames = buffer.frameCount - position;\n        }\n        this.putSamples(buffer.vector, buffer.position + position, numFrames);\n    },\n\n    receive: function (numFrames) {\n        if (!(numFrames >= 0) || numFrames > this._frameCount) {\n            numFrames = this._frameCount\n        }\n        this._frameCount -= numFrames;\n        this._position += numFrames;\n    },\n\n    receiveSamples: function (output, numFrames) {\n        var numSamples = numFrames * 2;\n        var sourceOffset = this.startIndex;\n        output.set(this._vector.subarray(sourceOffset, sourceOffset + numSamples));\n        this.receive(numFrames);\n    },\n\n    extract: function (output, position, numFrames) {\n        var sourceOffset = this.startIndex + position * 2;\n        var numSamples = numFrames * 2;\n        output.set(this._vector.subarray(sourceOffset, sourceOffset + numSamples));\n    },\n\n    ensureCapacity: function (numFrames) {\n        var minLength = numFrames * 2;\n        if (this._vector.length < minLength) {\n            var newVector = new Float32Array(minLength);\n            newVector.set(this._vector.subarray(this.startIndex, this.endIndex));\n            this._vector = newVector;\n            this._position = 0;\n        }\n        else {\n            this.rewind();\n        }\n    },\n\n    ensureAdditionalCapacity: function (numFrames) {\n        this.ensureCapacity(this.frameCount + numFrames);\n    },\n\n    rewind: function () {\n        if (this._position > 0) {\n            this._vector.set(this._vector.subarray(this.startIndex, this.endIndex));\n            this._position = 0;\n        }\n    }\n};\n/*\n* SoundTouch JS audio processing library\n* Copyright (c) Olli Parviainen\n* Copyright (c) Ryan Berdeen\n*\n* This library is free software; you can redistribute it and/or\n* modify it under the terms of the GNU Lesser General Public\n* License as published by the Free Software Foundation; either\n* version 2.1 of the License, or (at your option) any later version.\n*\n* This library is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n* Lesser General License for more details.\n*\n* You should have received a copy of the GNU Lesser General Public\n* License along with this library; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\nfunction FilterSupport(pipe) {\n    this._pipe = pipe;\n}\n\nFilterSupport.prototype = {\n    get pipe() {\n        return this._pipe;\n    },\n\n    get inputBuffer() {\n        return this._pipe.inputBuffer;\n    },\n\n    get outputBuffer() {\n        return this._pipe.outputBuffer;\n    },\n\n    // fillInputBuffer: function(numFrames) {\n    //     throw new Error(\"fillInputBuffer() not overridden\");\n    // },\n\n    fillOutputBuffer: function(numFrames) {\n        while (this.outputBuffer.frameCount < numFrames) {\n            // TODO hardcoded buffer size\n            var numInputFrames = (8192 * 2) - this.inputBuffer.frameCount;\n\n            this.fillInputBuffer(numInputFrames);\n\n            if (this.inputBuffer.frameCount < (8192 * 2)) {\n                break;\n                // TODO flush pipe\n            }\n            this._pipe.process();\n        }\n    },\n\n    clear: function() {\n        this._pipe.clear();\n    }\n};\n\nfunction SimpleFilter(sourceSound, pipe) {\n    FilterSupport.call(this, pipe);\n    this.sourceSound = sourceSound;\n    this.historyBufferSize = 22050;\n    this._sourcePosition = 0;\n    this.outputBufferPosition = 0;\n    this._position = 0;\n}\n\nextend(SimpleFilter.prototype, FilterSupport.prototype);\n\nextend(SimpleFilter.prototype, {\n    get position() {\n        return this._position;\n    },\n\n    set position(position) {\n        if (position > this._position) {\n            throw new RangeError('New position may not be greater than current position');\n        }\n        var newOutputBufferPosition = this.outputBufferPosition - (this._position - position);\n        if (newOutputBufferPosition < 0) {\n            throw new RangeError('New position falls outside of history buffer');\n        }\n        this.outputBufferPosition = newOutputBufferPosition;\n        this._position = position;\n    },\n\n    get sourcePosition() {\n        return this._sourcePosition;\n    },\n\n    set sourcePosition(sourcePosition) {\n        this.clear();\n        this._sourcePosition = sourcePosition;\n    },\n\n    fillInputBuffer: function(numFrames) {\n        var samples = new Float32Array(numFrames * 2);\n        var numFramesExtracted = this.sourceSound.extract(samples, numFrames, this._sourcePosition);\n        this._sourcePosition += numFramesExtracted;\n        this.inputBuffer.putSamples(samples, 0, numFramesExtracted);\n    },\n\n    extract: function(target, numFrames) {\n        this.fillOutputBuffer(this.outputBufferPosition + numFrames);\n\n        var numFramesExtracted = Math.min(numFrames, this.outputBuffer.frameCount - this.outputBufferPosition);\n        this.outputBuffer.extract(target, this.outputBufferPosition, numFramesExtracted);\n\n        var currentFrames = this.outputBufferPosition + numFramesExtracted;\n        this.outputBufferPosition = Math.min(this.historyBufferSize, currentFrames);\n        this.outputBuffer.receive(Math.max(currentFrames - this.historyBufferSize, 0));\n\n        this._position += numFramesExtracted;\n        return numFramesExtracted;\n    },\n\n    handleSampleData: function(e) {\n        this.extract(e.data, 4096);\n    },\n\n    clear: function() {\n        // TODO yuck\n        FilterSupport.prototype.clear.call(this);\n        this.outputBufferPosition = 0;\n    }\n});\n/*\n* SoundTouch JS audio processing library\n* Copyright (c) Olli Parviainen\n* Copyright (c) Ryan Berdeen\n*\n* This library is free software; you can redistribute it and/or\n* modify it under the terms of the GNU Lesser General Public\n* License as published by the Free Software Foundation; either\n* version 2.1 of the License, or (at your option) any later version.\n*\n* This library is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n* Lesser General License for more details.\n*\n* You should have received a copy of the GNU Lesser General Public\n* License along with this library; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\n//'use strict';\n\n/**\n* Giving this value for the sequence length sets automatic parameter value\n* according to tempo setting (recommended)\n*/\nvar USE_AUTO_SEQUENCE_LEN = 0;\n\n/**\n* Default length of a single processing sequence, in milliseconds. This determines to how\n* long sequences the original sound is chopped in the time-stretch algorithm.\n*\n* The larger this value is, the lesser sequences are used in processing. In principle\n* a bigger value sounds better when slowing down tempo, but worse when increasing tempo\n* and vice versa.\n*\n* Increasing this value reduces computational burden and vice versa.\n*/\n//var DEFAULT_SEQUENCE_MS = 130\nvar DEFAULT_SEQUENCE_MS = USE_AUTO_SEQUENCE_LEN;\n\n/**\n* Giving this value for the seek window length sets automatic parameter value\n* according to tempo setting (recommended)\n*/\nvar USE_AUTO_SEEKWINDOW_LEN = 0;\n\n/**\n* Seeking window default length in milliseconds for algorithm that finds the best possible\n* overlapping location. This determines from how wide window the algorithm may look for an\n* optimal joining location when mixing the sound sequences back together.\n*\n* The bigger this window setting is, the higher the possibility to find a better mixing\n* position will become, but at the same time large values may cause a \"drifting\" artifact\n* because consequent sequences will be taken at more uneven intervals.\n*\n* If there's a disturbing artifact that sounds as if a constant frequency was drifting\n* around, try reducing this setting.\n*\n* Increasing this value increases computational burden and vice versa.\n*/\n//var DEFAULT_SEEKWINDOW_MS = 25;\nvar DEFAULT_SEEKWINDOW_MS = USE_AUTO_SEEKWINDOW_LEN;\n\n/**\n* Overlap length in milliseconds. When the chopped sound sequences are mixed back together,\n* to form a continuous sound stream, this parameter defines over how long period the two\n* consecutive sequences are let to overlap each other.\n*\n* This shouldn't be that critical parameter. If you reduce the DEFAULT_SEQUENCE_MS setting\n* by a large amount, you might wish to try a smaller value on this.\n*\n* Increasing this value increases computational burden and vice versa.\n*/\nvar DEFAULT_OVERLAP_MS = 8;\n\n// Table for the hierarchical mixing position seeking algorithm\nvar _SCAN_OFFSETS = [\n    [ 124,  186,  248,  310,  372,  434,  496,  558,  620,  682,  744, 806,\n      868,  930,  992, 1054, 1116, 1178, 1240, 1302, 1364, 1426, 1488,   0],\n    [-100,  -75,  -50,  -25,   25,   50,   75,  100,    0,    0,    0,   0,\n        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   0],\n    [ -20,  -15,  -10,   -5,    5,   10,   15,   20,    0,    0,    0,   0,\n        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   0],\n    [  -4,   -3,   -2,   -1,    1,    2,    3,    4,    0,    0,    0,   0,\n        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   0]];\n\n// Adjust tempo param according to tempo, so that variating processing sequence length is used\n// at varius tempo settings, between the given low...top limits\nvar AUTOSEQ_TEMPO_LOW = 0.5;     // auto setting low tempo range (-50%)\nvar AUTOSEQ_TEMPO_TOP = 2.0;     // auto setting top tempo range (+100%)\n\n// sequence-ms setting values at above low & top tempo\nvar AUTOSEQ_AT_MIN = 125.0;\nvar AUTOSEQ_AT_MAX = 50.0;\nvar AUTOSEQ_K = ((AUTOSEQ_AT_MAX - AUTOSEQ_AT_MIN) / (AUTOSEQ_TEMPO_TOP - AUTOSEQ_TEMPO_LOW));\nvar AUTOSEQ_C = (AUTOSEQ_AT_MIN - (AUTOSEQ_K) * (AUTOSEQ_TEMPO_LOW));\n\n// seek-window-ms setting values at above low & top tempo\nvar AUTOSEEK_AT_MIN = 25.0;\nvar AUTOSEEK_AT_MAX = 15.0;\nvar AUTOSEEK_K = ((AUTOSEEK_AT_MAX - AUTOSEEK_AT_MIN) / (AUTOSEQ_TEMPO_TOP - AUTOSEQ_TEMPO_LOW));\nvar AUTOSEEK_C = (AUTOSEEK_AT_MIN - (AUTOSEEK_K) * (AUTOSEQ_TEMPO_LOW));\n\nfunction Stretch(createBuffers) {\n    AbstractFifoSamplePipe.call(this, createBuffers);\n    this.bQuickSeek = true;\n    this.bMidBufferDirty = false;\n\n    this.pMidBuffer = null;\n    this.overlapLength = 0;\n\n    this.bAutoSeqSetting = true;\n    this.bAutoSeekSetting = true;\n\n    this._tempo = 1;\n    this.setParameters(44100, DEFAULT_SEQUENCE_MS, DEFAULT_SEEKWINDOW_MS, DEFAULT_OVERLAP_MS);\n}\n\nextend(Stretch.prototype, AbstractFifoSamplePipe.prototype);\n\nextend(Stretch.prototype, {\n    clear: function () {\n        AbstractFifoSamplePipe.prototype.clear.call(this);\n        this._clearMidBuffer();\n    },\n\n    _clearMidBuffer: function () {\n        if (this.bMidBufferDirty) {\n            this.bMidBufferDirty = false;\n            this.pMidBuffer = null;\n        }\n    },\n\n    /**\n    * Sets routine control parameters. These control are certain time constants\n    * defining how the sound is stretched to the desired duration.\n    *\n    * 'sampleRate' = sample rate of the sound\n    * 'sequenceMS' = one processing sequence length in milliseconds (default = 82 ms)\n    * 'seekwindowMS' = seeking window length for scanning the best overlapping\n    *      position (default = 28 ms)\n    * 'overlapMS' = overlapping length (default = 12 ms)\n    */\n    setParameters: function(aSampleRate, aSequenceMS, aSeekWindowMS, aOverlapMS) {\n        // accept only positive parameter values - if zero or negative, use old values instead\n        if (aSampleRate > 0) {\n            this.sampleRate = aSampleRate;\n        }\n        if (aOverlapMS > 0) {\n            this.overlapMs = aOverlapMS;\n        }\n\n        if (aSequenceMS > 0) {\n            this.sequenceMs = aSequenceMS;\n            this.bAutoSeqSetting = false;\n        } else {\n            // zero or below, use automatic setting\n            this.bAutoSeqSetting = true;\n        }\n\n        if (aSeekWindowMS > 0) {\n            this.seekWindowMs = aSeekWindowMS;\n            this.bAutoSeekSetting = false;\n        } else {\n            // zero or below, use automatic setting\n            this.bAutoSeekSetting = true;\n        }\n\n        this.calcSeqParameters();\n\n        this.calculateOverlapLength(this.overlapMs);\n\n        // set tempo to recalculate 'sampleReq'\n        this.tempo = this._tempo;\n    },\n\n    /**\n    * Sets new target tempo. Normal tempo = 'SCALE', smaller values represent slower\n    * tempo, larger faster tempo.\n    */\n    set tempo(newTempo) {\n        var intskip;\n\n        this._tempo = newTempo;\n\n        // Calculate new sequence duration\n        this.calcSeqParameters();\n\n        // Calculate ideal skip length (according to tempo value)\n        this.nominalSkip = this._tempo * (this.seekWindowLength - this.overlapLength);\n        this.skipFract = 0;\n        intskip = Math.floor(this.nominalSkip + 0.5);\n\n        // Calculate how many samples are needed in the 'inputBuffer' to\n        // process another batch of samples\n        this.sampleReq = Math.max(intskip + this.overlapLength, this.seekWindowLength) + this.seekLength;\n    },\n\n\n    // get tempo() {\n    //   return this._tempo;\n    // },\n\n    get inputChunkSize() {\n        return this.sampleReq;\n    },\n\n    get outputChunkSize() {\n        return this.overlapLength + Math.max(0, this.seekWindowLength - 2 * this.overlapLength);\n    },\n\n    /**\n    * Calculates overlapInMsec period length in samples.\n    */\n    calculateOverlapLength: function (overlapInMsec) {\n        var newOvl;\n\n        // TODO assert(overlapInMsec >= 0);\n        newOvl = (this.sampleRate * overlapInMsec) / 1000;\n        if (newOvl < 16) newOvl = 16;\n\n        // must be divisible by 8\n        newOvl -= newOvl % 8;\n\n        this.overlapLength = newOvl;\n\n        this.pRefMidBuffer = new Float32Array(this.overlapLength * 2);\n        this.pMidBuffer = new Float32Array(this.overlapLength * 2);\n    },\n\n    checkLimits: function (x, mi, ma) {\n        return (x < mi) ? mi : ((x > ma) ? ma : x);\n    },\n\n    /**\n    * Calculates processing sequence length according to tempo setting\n    */\n    calcSeqParameters: function() {\n        var seq;\n        var seek;\n\n        if (this.bAutoSeqSetting) {\n            seq = AUTOSEQ_C + AUTOSEQ_K * this._tempo;\n            seq = this.checkLimits(seq, AUTOSEQ_AT_MAX, AUTOSEQ_AT_MIN);\n            this.sequenceMs = Math.floor(seq + 0.5);\n        }\n\n        if (this.bAutoSeekSetting) {\n            seek = AUTOSEEK_C + AUTOSEEK_K * this._tempo;\n            seek = this.checkLimits(seek, AUTOSEEK_AT_MAX, AUTOSEEK_AT_MIN);\n            this.seekWindowMs = Math.floor(seek + 0.5);\n        }\n\n        // Update seek window lengths\n        this.seekWindowLength = Math.floor((this.sampleRate * this.sequenceMs) / 1000);\n        this.seekLength = Math.floor((this.sampleRate * this.seekWindowMs) / 1000);\n    },\n\n\n    /**\n    * Enables/disables the quick position seeking algorithm.\n    */\n    set quickSeek(enable) {\n        this.bQuickSeek = enable;\n    },\n\n    clone: function () {\n        var result = new Stretch();\n        result.tempo = this.tempo;\n        result.setParameters(this.sampleRate, this.sequenceMs, this.seekWindowMs, this.overlapMs);\n        return result;\n    },\n\n    /**\n    * Seeks for the optimal overlap-mixing position.\n    */\n    seekBestOverlapPosition: function () {\n      if (this.bQuickSeek) {\n          return this.seekBestOverlapPositionStereoQuick();\n      }\n      else {\n          return this.seekBestOverlapPositionStereo();\n      }\n    },\n\n    /**\n    * Seeks for the optimal overlap-mixing position. The 'stereo' version of the\n    * routine\n    *\n    * The best position is determined as the position where the two overlapped\n    * sample sequences are 'most alike', in terms of the highest cross-correlation\n    * value over the overlapping period\n    */\n    seekBestOverlapPositionStereo: function () {\n        var bestOffs;\n        var bestCorr\n        var corr;\n        var i;\n\n        // Slopes the amplitudes of the 'midBuffer' samples\n        this.precalcCorrReferenceStereo();\n\n        bestCorr = Number.MIN_VALUE;\n        bestOffs = 0;\n\n        // Scans for the best correlation value by testing each possible position\n        // over the permitted range.\n        for (i = 0; i < this.seekLength; i ++) {\n            // Calculates correlation value for the mixing position corresponding\n            // to 'i'\n            corr = this.calcCrossCorrStereo(2 * i, this.pRefMidBuffer);\n\n            // Checks for the highest correlation value\n            if (corr > bestCorr) {\n                bestCorr = corr;\n                bestOffs = i;\n            }\n        }\n\n        return bestOffs;\n    },\n\n    /**\n    * Seeks for the optimal overlap-mixing position. The 'stereo' version of the\n    * routine\n    *\n    * The best position is determined as the position where the two overlapped\n    * sample sequences are 'most alike', in terms of the highest cross-correlation\n    * value over the overlapping period\n    */\n    seekBestOverlapPositionStereoQuick: function () {\n        var j;\n        var bestOffs;\n        var bestCorr;\n        var corr;\n        var scanCount;\n        var corrOffset;\n        var tempOffset;\n\n        // Slopes the amplitude of the 'midBuffer' samples\n        this.precalcCorrReferenceStereo();\n\n        bestCorr = Number.MIN_VALUE;\n        bestOffs = 0;\n        corrOffset = 0;\n        tempOffset = 0;\n\n        // Scans for the best correlation value using four-pass hierarchical search.\n        //\n        // The look-up table 'scans' has hierarchical position adjusting steps.\n        // In first pass the routine searhes for the highest correlation with\n        // relatively coarse steps, then rescans the neighbourhood of the highest\n        // correlation with better resolution and so on.\n        for (scanCount = 0; scanCount < 4; scanCount ++) {\n            j = 0;\n            while (_SCAN_OFFSETS[scanCount][j]) {\n                tempOffset = corrOffset + _SCAN_OFFSETS[scanCount][j];\n                if (tempOffset >= this.seekLength) break;\n\n                // Calculates correlation value for the mixing position corresponding\n                // to 'tempOffset'\n                corr = this.calcCrossCorrStereo(2 * tempOffset, this.pRefMidBuffer);\n\n                // Checks for the highest correlation value\n                if (corr > bestCorr) {\n                    bestCorr = corr;\n                    bestOffs = tempOffset;\n                }\n                j++;\n            }\n            corrOffset = bestOffs;\n        }\n\n        return bestOffs;\n    },\n\n    /**\n    * Slopes the amplitude of the 'midBuffer' samples so that cross correlation\n    * is faster to calculate\n    */\n    precalcCorrReferenceStereo: function() {\n        var i;\n        var cnt2;\n        var temp;\n\n        for (i = 0; i < this.overlapLength; i ++) {\n            temp = i * (this.overlapLength - i);\n            cnt2 = i * 2;\n            this.pRefMidBuffer[cnt2] = this.pMidBuffer[cnt2] * temp;\n            this.pRefMidBuffer[cnt2 + 1] = this.pMidBuffer[cnt2 + 1] * temp;\n        }\n    },\n\n    calcCrossCorrStereo: function(mixingPos, compare) {\n        var mixing = this._inputBuffer.vector;\n        mixingPos += this._inputBuffer.startIndex;\n\n        var corr;\n        var i;\n        var mixingOffset;\n\n        corr = 0;\n        for (i = 2; i < 2 * this.overlapLength; i += 2) {\n            mixingOffset = i + mixingPos;\n            corr += mixing[mixingOffset] * compare[i] +\n            mixing[mixingOffset + 1] * compare[i + 1];\n        }\n\n        return corr;\n    },\n\n    // TODO inline\n    /**\n    * Overlaps samples in 'midBuffer' with the samples in 'pInputBuffer' at position\n    * of 'ovlPos'.\n    */\n    overlap: function (ovlPos) {\n        this.overlapStereo(2 * ovlPos);\n    },\n\n    /**\n    * Overlaps samples in 'midBuffer' with the samples in 'pInput'\n    */\n    overlapStereo: function(pInputPos) {\n        var pInput = this._inputBuffer.vector;\n        pInputPos += this._inputBuffer.startIndex;\n\n        var pOutput = this._outputBuffer.vector;\n        var pOutputPos = this._outputBuffer.endIndex;\n\n        var i;\n        var cnt2;\n        var fTemp;\n        var fScale;\n        var fi;\n        var pInputOffset;\n        var pOutputOffset;\n\n        fScale = 1 / this.overlapLength;\n\n        for (i = 0; i < this.overlapLength; i++) {\n            fTemp = (this.overlapLength - i) * fScale;\n            fi = i * fScale;\n            cnt2 = 2 * i;\n            pInputOffset = cnt2 + pInputPos;\n            pOutputOffset = cnt2 + pOutputPos;\n            pOutput[pOutputOffset + 0] = pInput[pInputOffset + 0] * fi + this.pMidBuffer[cnt2 + 0] * fTemp;\n            pOutput[pOutputOffset + 1] = pInput[pInputOffset + 1] * fi + this.pMidBuffer[cnt2 + 1] * fTemp;\n        }\n    },\n\n    process: function() {\n        var ovlSkip;\n        var offset;\n        var temp;\n\n        if (this.pMidBuffer == null) {\n            // if midBuffer is empty, move the first samples of the input stream\n            // into it\n            if (this._inputBuffer.frameCount < this.overlapLength) {\n                // wait until we've got overlapLength samples\n                return;\n            }\n            this.pMidBuffer = new Float32Array(this.overlapLength * 2);\n            this._inputBuffer.receiveSamples(this.pMidBuffer, this.overlapLength);\n        }\n\n        // Process samples as long as there are enough samples in 'inputBuffer'\n        // to form a processing frame.\n        while (this._inputBuffer.frameCount >= this.sampleReq) {\n            // If tempo differs from the normal ('SCALE'), scan for the best overlapping\n            // position\n            offset = this.seekBestOverlapPosition();\n\n            // Mix the samples in the 'inputBuffer' at position of 'offset' with the\n            // samples in 'midBuffer' using sliding overlapping\n            // ... first partially overlap with the end of the previous sequence\n            // (that's in 'midBuffer')\n            this._outputBuffer.ensureAdditionalCapacity(this.overlapLength);\n            // FIXME unit?\n            //overlap(uint(offset));\n            this.overlap(Math.floor(offset));\n            this._outputBuffer.put(this.overlapLength);\n\n            // ... then copy sequence samples from 'inputBuffer' to output\n            temp = (this.seekWindowLength - 2 * this.overlapLength); // & 0xfffffffe;\n            if (temp > 0) {\n                this._outputBuffer.putBuffer(this._inputBuffer, offset + this.overlapLength, temp);\n            }\n\n            // Copies the end of the current sequence from 'inputBuffer' to\n            // 'midBuffer' for being mixed with the beginning of the next\n            // processing sequence and so on\n            //assert(offset + seekWindowLength <= (int)inputBuffer.numSamples());\n            var start = this.inputBuffer.startIndex + 2 * (offset + this.seekWindowLength - this.overlapLength);\n            this.pMidBuffer.set(this._inputBuffer.vector.subarray(start, start + 2 * this.overlapLength))\n\n            // Remove the processed samples from the input buffer. Update\n            // the difference between integer & nominal skip step to 'skipFract'\n            // in order to prevent the error from accumulating over time.\n            this.skipFract += this.nominalSkip;   // real skip size\n            ovlSkip = Math.floor(this.skipFract); // rounded to integer skip\n            this.skipFract -= ovlSkip;            // maintain the fraction part, i.e. real vs. integer skip\n            this._inputBuffer.receive(ovlSkip);\n        }\n    }\n});\n\n// https://bugs.webkit.org/show_bug.cgi?id=57295\nextend(Stretch.prototype, {\n    get tempo() {\n      return this._tempo;\n    }\n});\n/*\n* SoundTouch JS audio processing library\n* Copyright (c) Olli Parviainen\n* Copyright (c) Ryan Berdeen\n*\n* This library is free software; you can redistribute it and/or\n* modify it under the terms of the GNU Lesser General Public\n* License as published by the Free Software Foundation; either\n* version 2.1 of the License, or (at your option) any later version.\n*\n* This library is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n* Lesser General Public License for more details.\n*\n* You should have received a copy of the GNU Lesser General Public\n* License along with this library; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\nfunction SoundTouch() {\n    this.rateTransposer = new RateTransposer(false);\n    this.tdStretch = new Stretch(false);\n\n    this._inputBuffer = new FifoSampleBuffer();\n    this._intermediateBuffer = new FifoSampleBuffer();\n    this._outputBuffer = new FifoSampleBuffer();\n\n    this._rate = 0;\n    this.tempo = 0;\n\n    this.virtualPitch = 1.0;\n    this.virtualRate = 1.0;\n    this.virtualTempo = 1.0;\n\n    this._calculateEffectiveRateAndTempo();\n}\n\nextend(SoundTouch.prototype, {\n    clear: function () {\n        this.rateTransposer.clear();\n        this.tdStretch.clear();\n    },\n\n    clone: function () {\n        var result = new SoundTouch();\n        result.rate = this.rate;\n        result.tempo = this.tempo;\n        return result;\n    },\n\n    get rate() {\n        return this._rate;\n    },\n\n    set rate(rate) {\n        this.virtualRate = rate;\n        this._calculateEffectiveRateAndTempo();\n    },\n\n    set rateChange(rateChange) {\n        this.rate = 1.0 + 0.01 * rateChange;\n    },\n\n    get tempo() {\n        return this._tempo;\n    },\n\n    set tempo(tempo) {\n        this.virtualTempo = tempo;\n        this._calculateEffectiveRateAndTempo();\n    },\n\n    set tempoChange(tempoChange) {\n        this.tempo = 1.0 + 0.01 * tempoChange;\n    },\n\n    set pitch(pitch) {\n        this.virtualPitch = pitch;\n        this._calculateEffectiveRateAndTempo();\n    },\n\n    set pitchOctaves(pitchOctaves) {\n        this.pitch = Math.exp(0.69314718056 * pitchOctaves);\n        this._calculateEffectiveRateAndTempo();\n    },\n\n    set pitchSemitones(pitchSemitones) {\n        this.pitchOctaves = pitchSemitones / 12.0;\n    },\n\n    get inputBuffer() {\n        return this._inputBuffer;\n    },\n\n    get outputBuffer() {\n        return this._outputBuffer;\n    },\n\n    _calculateEffectiveRateAndTempo: function () {\n        var previousTempo = this._tempo;\n        var previousRate = this._rate;\n\n        this._tempo = this.virtualTempo / this.virtualPitch;\n        this._rate = this.virtualRate * this.virtualPitch;\n\n        if (testFloatEqual(this._tempo, previousTempo)) {\n            this.tdStretch.tempo = this._tempo;\n        }\n        if (testFloatEqual(this._rate, previousRate)) {\n            this.rateTransposer.rate = this._rate;\n        }\n\n        if (this._rate > 1.0) {\n            if (this._outputBuffer !== this.rateTransposer.outputBuffer) {\n                this.tdStretch.inputBuffer = this._inputBuffer;\n                this.tdStretch.outputBuffer = this._intermediateBuffer;\n\n                this.rateTransposer.inputBuffer = this._intermediateBuffer;\n                this.rateTransposer.outputBuffer = this._outputBuffer;\n            }\n        }\n        else {\n            if (this._outputBuffer !== this.tdStretch.outputBuffer) {\n                this.rateTransposer.inputBuffer = this._inputBuffer;\n                this.rateTransposer.outputBuffer = this._intermediateBuffer;\n\n                this.tdStretch.inputBuffer = this._intermediateBuffer;\n                this.tdStretch.outputBuffer = this._outputBuffer;\n            }\n        }\n    },\n\n    process: function () {\n        if (this._rate > 1.0) {\n            this.tdStretch.process();\n            this.rateTransposer.process();\n        }\n        else {\n            this.rateTransposer.process();\n            this.tdStretch.process();\n        }\n    }\n});\n\n// This is the only part that was added for screw (plus fixing a couple typos where `this` was\n// erroneously not used)\nmodule.exports = {SimpleFilter, SoundTouch};\n","const classNames = require('classnames');\nconst React = require('react');\n\nconst FilenameLabel = props => {\n    if (props.filename === undefined || props.filename === \"\") {\n        return null;\n    }\n\n    const classes = ['alert', 'filename-label'];\n    if (props.error === undefined) {\n        classes.push('alert-info');\n    } else {\n        classes.push('alert-danger');\n    }\n\n    var title = props.filename;\n    title = (title.charAt(title.length-4) === \".\")?(title.substring(0, title.indexOf('.'))):(title);\n    return <span className={classNames(classes)}>{title}</span>;\n};\n\n\nexport default FilenameLabel;\n","const React = require('react');\n\nconst ErrorAlert = props => {\n    if (props.error === undefined) {\n        return null;\n    }\n\n    return (\n        <div className=\"alert alert-danger\">\n            <b>{props.error.type}:</b> {props.error.message}\n        </div>\n    );\n};\n\nexport default ErrorAlert;\n","import FilenameLabel from'./FilenameLabel.jsx';\nimport ErrorAlert from'./ErrorAlert.jsx';\n\nconst EventEmitter = require('events').EventEmitter;\nconst React = require('react');\nconst AudioPlayer = require('./../lib/AudioPlayer');\n\nclass Karaoke extends React.Component {\n\n\tconstructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.state = {\n            action: 'stop',\n            duration: undefined,\n            error: undefined,\n            filename: undefined,\n            pitch: 1.0,\n            key: 0,\n            simpleFilter: undefined,\n            status: [],\n            t: 0,\n            tempo: 1.0,\n            file: \"\",\n            showPL : false,\n            savedMusic: [],\n            yt_title: \"\",\n            yt_list: [],\n        };\n\n        //create an observer\n        this.emitter = new EventEmitter();\n        this.emitter.on('state', state => this.setState(state));\n        this.emitter.on('status', status => {\n            if (status === 'Done!') {\n                this.setState({status: []});\n            } else {\n                this.setState({status: this.state.status.concat(status)});\n            }\n        });\n        this.emitter.on('stop', () => this.stop());\n\n\n        //create an audio player\n        this.audioPlayer = new AudioPlayer({\n            emitter: this.emitter,\n            pitch: this.state.pitch,\n            tempo: this.state.tempo,\n        });\n\n        //initialize in-app helper variables and functions\n        this.inputRef = React.createRef();\n        this.handleSeek = this.handleSeek.bind(this);\n        this.handleTitle = this.handleTitle.bind(this);\n        this.loadFile = this.loadFile.bind(this);\n        this.prev = 0;\n    }\n\n/* React Page related methods */\n    //At the beginning of the app\n    componentDidMount() {\n        this.stop();\n        this.getMusicList();\n    }\n    //At the end of the app\n    componentWillUnmount() {\n        this.stop();\n    }\n\n    //only gets called from video player\n    play() {\n        if (this.state.action !== 'play') {\n            this.audioPlayer.play();\n            this.setState({action: 'play'});\n            this.ref.current.playbackRate = this.state.tempo;\n        }\n    }\n\n/* Video&Audio player methods */\n    //called iff video player is paused\n    pause() {\n        if (this.state.action === 'play') {\n            this.audioPlayer.pause();\n            this.setState({action: 'pause'});\n        }\n    }\n    //gets called when video player onStop()\n    stop() {\n        this.pause();\n        this.audioPlayer.seekPercent(0);\n        this.setState({action: 'stop', t: 0});\n        this.ref.current.currentTime = 0;\n        this.ref.current.pause();\n    }\n    //get file inputs from user to be played\n    handleFileChange(e) {\n        this.setState({showPL : false});\n        if (e.target.files.length > 0) {\n            const filename = e.target.value.replace('C:\\\\fakepath\\\\', '');\n            const file = e.target.files[0];\n            this.loadFile(file,filename);\n        }\n    }\n    //handle seek in video player\n    handleSeek(e) {\n        e.preventDefault();\n        var current = this.ref.current.currentTime;\n        if(current<this.prev-0.5*this.state.tempo || this.prev+0.5*this.state.tempo<current){\n            const percent = this.ref.current.currentTime/this.state.duration*100;\n            this.audioPlayer.seekPercent(percent);\n            this.play();\n        }\n        this.prev = current;\n    }\n    //load file and play blob on both audio & video\n    loadFile(file,filename) {\n        this.stop();\n        this.emitter.emit('status', 'Reading file...');\n        this.emitter.emit('state', {\n            error: undefined,\n            filename: undefined,\n        });\n        this.emitter.emit('state', {filename});\n        var fileURL = URL.createObjectURL(file);\n        this.setState({file : fileURL});\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onload = async event => {\n            this.emitter.emit('status', 'Playing file...');\n            let buffer;\n            try {\n                buffer = await this.audioPlayer.decodeAudioData(event.target.result);\n            } catch (err) {\n                this.emitter.emit('state', {\n                    error: {\n                        message: err.message,\n                        type: 'Decoding error',\n                    },\n                });\n                return;\n            }\n            this.audioPlayer.setBuffer(buffer);\n        };\n        this.stop();\n    }\n\n\n/* API related methods */\n    //get list of saved music on server and save them in savedMusic \n    getMusicList(){\n        this.setState({savedMusic:[]});\n        this.getFiles().then(res => {\n            for(var i=0;i<res.music.length;i++){\n                this.setState({ savedMusic : this.state.savedMusic.concat(res.music[i].filename) });\n            }\n        }).catch(err => console.log(err));\n\n    }\n    //get music filenames from server\n    getFiles = async () => {\n        const response = await fetch('/api/files');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    //send title to be searched to server and get <= 10 short videos \n    async searchOnYoutube(e) {\n        e.preventDefault();\n        var title = e.target[0].value;\n        const response = await fetch('/api/youtubeSearch?title='+title);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        this.setState({yt_list: body});\n        this.stop();\n    };\n\n\n    //clear media and get new media blob\n    async getMedia(e,yt_title,yt_url){\n        e.preventDefault();\n        this.setState({yt_list:[],yt_title:\"\"});\n        await this.getMusic(yt_url,yt_title);\n    }\n    //send a saved music filename and receive blob of the music\n    async getSavedMusic(e) {\n        e.preventDefault();\n        var filename = e.target.outerText+\".mp4\";\n        this.getMusic(\"\",filename);\n    }\n    //get video blob\n    async getMusic(yt_url,yt_title) {\n        this.setState({showPL:false});\n        var file;\n\n        var url = (yt_url===\"\")?('/api/savedMusic?file='+yt_title):('/api/music?url='+yt_url+'&title='+yt_title);\n\n        await fetch( url, {\n            method: 'GET',\n            headers: {},\n        }).then(function (response) {\n            return response.blob();\n        }).then(function(blob) {\n            file = blob;\n        }).catch(error => {});\n        this.loadFile(file,yt_title);\n    }\n\n\n/* HTML related methods */\n    //toggle the list of saved music\n    showPlaylist(e){\n        e.preventDefault();\n        this.setState({showPL : this.state.savedMusic.length>0});\n    }\n    hidePlaylist(e){\n        e.preventDefault();\n        this.setState({showPL : false});\n    }\n\n    //handle input text for title of youtube in search box\n    handleTitle(e){\n        this.setState({yt_title : e.target.value});\n    }\n\n\n/* Soundsource related methods */\n    //get adjusted pitch value\n    handlePitchChange(e) {\n        const pitch = this.getPitchValue(e.target.value);\n        this.audioPlayer.pitch = pitch;\n        this.setState({pitch});\n    }\n    decreasePitch(e){\n    \tif(this.state.pitch > 0.5 && this.state.pitch <= 2){\n    \t\tconst key = this.state.key-1;\n    \t\tconst pitch = this.getPitchValue(key);\n\t        this.audioPlayer.pitch = pitch;\n\t        this.setState({key});\n\t        this.setState({pitch});\n    \t}\n    }\n    increasePitch(e){\n    \tif(this.state.pitch >= 0.5 && this.state.pitch < 2){\n    \t\tconst key = this.state.key+1;\n    \t\tconst pitch = this.getPitchValue(key);\n\t        this.audioPlayer.pitch = pitch;\n\t        this.setState({key});\n\t        this.setState({pitch});\n    \t}\n    }\n    getPitchValue(val) {\n        var s_var = (val>=0)?(parseInt(val)):(12+parseInt(val));\n        //https://en.wikipedia.org/wiki/12_equal_temperament\n        var num = Math.pow(2, (s_var/12)).toFixed(3);\n        const pitch = (val>=0)?(num):(num/2);\n        return pitch;\n    }\n\n    //Handle Tempo Changes \n    handleTempoChange(e) {\n        const tempo = e.target.value;\n        this.audioPlayer.tempo = tempo;\n        this.setState({tempo});\n    }\n    decreaseTempo(e) {\n    \tif(this.state.tempo > 0.5 && this.state.tempo <= 2){\n            const tempo = +(Math.round(this.state.tempo-0.1 + \"e+2\")  + \"e-2\");\n            console.log(tempo);\n\t        this.audioPlayer.tempo = tempo;\n\t        this.setState({tempo});\n            this.ref.current.playbackRate = tempo;\n    \t}\n    }\n    increaseTempo(e) {\n        if(this.state.tempo >= 0.5 && this.state.tempo < 2){\n    \t\tconst tempo = +(Math.round(this.state.tempo+0.1 + \"e+2\")  + \"e-2\");\n\t        this.audioPlayer.tempo = tempo;\n\t        this.setState({tempo});\n            this.ref.current.playbackRate = tempo;\n    \t}\n    }\n\n\n\n\trender (){\n        //create a table of saved music\n        var items = [];\n        for(const [key, value] of this.state.savedMusic.entries()){\n            items.push(<tr><td><a href=\"#header\" key={key} onClick={e => this.getSavedMusic(e)}>{value.substring(0,value.indexOf('.'))}</a></td></tr>);\n        }\n\n        //create a list of youtube search results\n        var yt_list = [];\n        for(const [key,value] of this.state.yt_list.entries()){\n            yt_list.push(<tr><td>\n                <div className=\"yt_element\" onClick={e => this.getMedia(e,value.title,value.url)}>\n                    <div className=\"yt_thumb\">\n                        <img src={value.thumbnail} alt=\"\" className=\"yt_image\"/>\n                        <p className=\"yt_time\">({value.time})</p>\n                    </div>\n                    <div className=\"yt_info\">\n                        <p className=\"yt_title\">{value.title}</p>\n                        <p className=\"yt_author\">{value.author}</p> \n                    </div>\n                </div></td></tr>\n            );\n        }\n\n\t  \treturn (\n\n\t  \t\t<div className=\"Karaoke\">\n                <div id=\"header\" className=\"row title_header alert alert-info\">\n\t  \t\t  \t    무한코인노래방\n                </div>\n\n                <div className=\"row\" style={{marginBottom: '1em', marginLeft:'auto', marginRight:'auto'}}>\n                    <label\n                        className=\"btn btn-primary btn-md\"\n                        htmlFor=\"upload-file\"\n                        style={{marginRight: '0.25em', marginBottom: '1em'}}\n                    >\n                        <input\n                            id=\"upload-file\"\n                            accept=\"audio\"\n                            type=\"file\"\n                            style={{display: 'none'}}\n                            onChange={e => this.handleFileChange(e)}\n                        />\n                        Upload from Your Device\n                    </label>\n                    <button\n                        className=\"btn btn-primary btn-md\"\n                        style={{marginLeft: '0.25em',marginBottom: '1em', display: (this.state.savedMusic.length>0)?(''):('none')}}\n                        id=\"choose-file\"\n                        onClick={(this.state.showPL)?(e => this.hidePlaylist(e)):(e => this.showPlaylist(e))}\n                    >\n                        {(!this.state.showPL)?('Show Saved Music'):('Hide Saved Music')}\n                    </button>\n\n\n                </div>\n\n                <div className=\"row\">\n                    <form onSubmit={e => this.searchOnYoutube(e)} >\n                        <input id=\"yt_title\" value={this.state.yt_title} onChange={e => this.handleTitle(e)} type=\"text\" placeholder=\"Search on Youtube\" className=\"form-control\"/>\n                        <input type=\"submit\" className=\"btn btn-danger btn-md\" value=\"Search\"/>\n                    </form>\n                </div>\n\n                <ErrorAlert error={this.state.error} />\n\n                \n                 \n                <div className=\"row\" style={{display : (this.state.showPL)?( 'initial' ):( 'none' )}}>\n                    <hr/>\n                    <div className=\"row\">\n                        <table className=\"music_table table table-hover\">\n                            <tbody>\n                                {items}\n                            </tbody>\n                        </table>\n                        <p onClick={this.hidePlaylist.bind(this)} style={{float: 'right',fontSize:'10px'}} >close</p>\n                    </div>\n                    \n                </div>\n            \n\n                <div className=\"yt_table\" style={{display: (this.state.yt_list.length>0)?('initial'):('none')}}>\n                    <hr/> \n                    <div className=\"row\">\n                        <div className=\"row\">\n                            <table className=\" table table-hover\">\n                                <tbody>\n                                        {yt_list}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div style={{display: (this.state.action!=='load')?('initial'):('none')}}>\n                    <hr/> \n                    <div className=\"row\">\n                        <FilenameLabel error={this.state.error} filename={this.state.filename} />\n                        <div>\n                            <video muted ref={this.ref} src={this.state.file} id=\"my-video\" className=\"vid\" controls onTimeUpdate={e => this.handleSeek(e)} onPlay={this.play.bind(this)} onPause={this.pause.bind(this)} controlsList=\"nodownload\" disablePictureInPicture>\n                            </video>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"controls\">\n                            <button type=\"button\" onClick={e => this.decreasePitch(e)} className=\"btn btns btn-secondary\"> - </button>\n                            \n                            <p className=\"tagg\"> Pitch ({ (this.state.key<0)?(this.state.key):(\"+\"+this.state.key) } key) </p>\n                            \n                            <button type=\"button\" onClick={e => this.increasePitch(e)} className=\"btn btns btn-secondary\"> + </button>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"controls\">\n                            <button type=\"button\" onClick={e => this.decreaseTempo(e)} className=\"btn btns btn-secondary\"> - </button>\n                            \n                            <p className=\"tagg\"> Tempo ({ parseFloat(this.state.tempo).toFixed(1) }x) </p>\n                            \n                            <button type=\"button\" onClick={e => this.increaseTempo(e)} className=\"btn btns btn-secondary\"> + </button>\n                        </div>\n                    </div>\n                </div>\n                <div style={{width:'100%', display: (this.state.action==='load')?('initial'):('none')}}>\n                    <img src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\" style={{ width:'50%',marginLeft:'25%', marginRight:'25%'}} alt=\"loading...\" />\n                </div>\n\t\t    </div>\n\n\t    )\n\t}\n\n}\n\nexport default Karaoke;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Navigation from './components/Navigation.jsx';\nimport Karaoke from './components/Karaoke.jsx';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nclass App extends Component {\n  \nrender() {\n    return (\n        <div className=\"App\">\n            <div>\n                <div>\n                    <Karaoke/>\n                    {/*<BrowserRouter>\n                        <div>\n                            <Navigation />\n                            <Switch>\n                                <Route path=\"/\" component={Karaoke} exact/>\n                            </Switch>\n                        </div> \n                    </BrowserRouter>\n                */}\n                </div>\n            </div>\n            <hr/>\n        </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\nimport './css/bootstrap.css';\nimport './css/my.css';\nimport './css/octicons.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}