{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonkim/my-app/src/App.js\";\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst React = require('react');\n\nconst TrackControls = require('./components/TrackControls.jsx');\n\nconst AudioPlayer = require('./lib/AudioPlayer');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      action: 'stop',\n      duration: undefined,\n      error: undefined,\n      filename: undefined,\n      pitch: 0.8,\n      simpleFilter: undefined,\n      status: [],\n      t: 0,\n      tempo: 0.8\n    };\n    this.emitter = new EventEmitter();\n    this.emitter.on('state', state => this.setState(state));\n    this.emitter.on('status', status => {\n      if (status === 'Done!') {\n        this.setState({\n          status: []\n        });\n      } else {\n        this.setState({\n          status: this.state.status.concat(status)\n        });\n      }\n    });\n    this.emitter.on('stop', () => this.stop());\n    this.audioPlayer = new AudioPlayer({\n      emitter: this.emitter,\n      pitch: this.state.pitch,\n      tempo: this.state.tempo\n    });\n  }\n\n  play() {\n    if (this.state.action !== 'play') {\n      this.audioPlayer.play();\n      this.setState({\n        action: 'play'\n      });\n    }\n  }\n\n  pause() {\n    if (this.state.action === 'play') {\n      this.audioPlayer.pause();\n      this.setState({\n        action: 'pause'\n      });\n    }\n  }\n\n  stop() {\n    this.pause();\n    this.audioPlayer.seekPercent(0);\n    this.setState({\n      action: 'stop',\n      t: 0\n    });\n  }\n\n  handleFileChange(e) {\n    if (e.target.files.length > 0) {\n      this.stop();\n      this.emitter.emit('status', 'Reading file...');\n      this.emitter.emit('state', {\n        error: undefined,\n        filename: undefined\n      }); // http://stackoverflow.com/q/4851595/786644\n\n      const filename = e.target.value.replace('C:\\\\fakepath\\\\', '');\n      this.emitter.emit('state', {\n        filename\n      });\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onload = async event => {\n        this.emitter.emit('status', 'Playing file...');\n        let buffer;\n\n        try {\n          buffer = await this.audioPlayer.decodeAudioData(event.target.result);\n        } catch (err) {\n          this.emitter.emit('state', {\n            error: {\n              message: err.message,\n              type: 'Decoding error'\n            }\n          });\n          return;\n        }\n\n        this.audioPlayer.setBuffer(buffer);\n        this.play();\n      };\n    }\n  }\n\n  handlePitchChange(e) {\n    const pitch = e.target.value;\n    this.audioPlayer.pitch = pitch;\n    this.setState({\n      pitch\n    });\n  }\n\n  handleTempoChange(e) {\n    const tempo = e.target.value;\n    this.audioPlayer.tempo = tempo;\n    this.setState({\n      tempo\n    });\n  }\n\n  handleSeek(e) {\n    const percent = parseFloat(e.target.value);\n    this.audioPlayer.seekPercent(percent);\n    this.play();\n  }\n\n  percentDone() {\n    if (!this.state.duration) {\n      return 0;\n    }\n\n    return this.state.t / this.state.duration * 100;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"src/App.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 18\n          }, this), \" and save to reload.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"App-link\",\n          href: \"https://reactjs.org\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Learn React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jonkim/my-app/src/App.js"],"names":["EventEmitter","require","React","TrackControls","AudioPlayer","App","Component","constructor","props","state","action","duration","undefined","error","filename","pitch","simpleFilter","status","t","tempo","emitter","on","setState","concat","stop","audioPlayer","play","pause","seekPercent","handleFileChange","e","target","files","length","emit","value","replace","file","reader","FileReader","readAsArrayBuffer","onload","event","buffer","decodeAudioData","result","err","message","type","setBuffer","handlePitchChange","handleTempoChange","handleSeek","percent","parseFloat","percentDone","render"],"mappings":"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","sourcesContent":["const EventEmitter = require('events').EventEmitter;\nconst React = require('react');\nconst TrackControls = require('./components/TrackControls.jsx');\nconst AudioPlayer = require('./lib/AudioPlayer');\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n        super(props);\n\n        this.state = {\n            action: 'stop',\n            duration: undefined,\n            error: undefined,\n            filename: undefined,\n            pitch: 0.8,\n            simpleFilter: undefined,\n            status: [],\n            t: 0,\n            tempo: 0.8,\n        };\n\n        this.emitter = new EventEmitter();\n        this.emitter.on('state', state => this.setState(state));\n        this.emitter.on('status', status => {\n            if (status === 'Done!') {\n                this.setState({status: []});\n            } else {\n                this.setState({status: this.state.status.concat(status)});\n            }\n        });\n        this.emitter.on('stop', () => this.stop());\n\n        this.audioPlayer = new AudioPlayer({\n            emitter: this.emitter,\n            pitch: this.state.pitch,\n            tempo: this.state.tempo,\n        });\n    }\n\n    play() {\n        if (this.state.action !== 'play') {\n            this.audioPlayer.play();\n            this.setState({action: 'play'});\n        }\n    }\n\n    pause() {\n        if (this.state.action === 'play') {\n            this.audioPlayer.pause();\n            this.setState({action: 'pause'});\n        }\n    }\n\n    stop() {\n        this.pause();\n        this.audioPlayer.seekPercent(0);\n        this.setState({action: 'stop', t: 0});\n    }\n\n    handleFileChange(e) {\n        if (e.target.files.length > 0) {\n            this.stop();\n\n            this.emitter.emit('status', 'Reading file...');\n            this.emitter.emit('state', {\n                error: undefined,\n                filename: undefined,\n            });\n\n            // http://stackoverflow.com/q/4851595/786644\n            const filename = e.target.value.replace('C:\\\\fakepath\\\\', '');\n            this.emitter.emit('state', {filename});\n\n            const file = e.target.files[0];\n\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(file);\n            reader.onload = async event => {\n                this.emitter.emit('status', 'Playing file...');\n\n                let buffer;\n                try {\n                    buffer = await this.audioPlayer.decodeAudioData(event.target.result);\n                } catch (err) {\n                    this.emitter.emit('state', {\n                        error: {\n                            message: err.message,\n                            type: 'Decoding error',\n                        },\n                    });\n                    return;\n                }\n\n                this.audioPlayer.setBuffer(buffer);\n                this.play();\n            };\n        }\n    }\n\n    handlePitchChange(e) {\n        const pitch = e.target.value;\n        this.audioPlayer.pitch = pitch;\n        this.setState({pitch});\n    }\n\n    handleTempoChange(e) {\n        const tempo = e.target.value;\n        this.audioPlayer.tempo = tempo;\n        this.setState({tempo});\n    }\n\n    handleSeek(e) {\n        const percent = parseFloat(e.target.value);\n        this.audioPlayer.seekPercent(percent);\n        this.play();\n    }\n\n    percentDone() {\n        if (!this.state.duration) {\n            return 0;\n        }\n\n        return this.state.t / this.state.duration * 100;\n    }\n\n\trender (){\n\t  \treturn (\n\n\t  \t\t<div className=\"App\">\n\t\t      <header className=\"App-header\">\n\t\t        <p>\n\t\t          Edit <code>src/App.js</code> and save to reload.\n\t\t        </p>\n\t\t        <a\n\t\t          className=\"App-link\"\n\t\t          href=\"https://reactjs.org\"\n\t\t          target=\"_blank\"\n\t\t          rel=\"noopener noreferrer\"\n\t\t        >\n\t\t          Learn React\n\t\t        </a>\n\t\t      </header>\n\t\t    </div>\n\t    )\n\t}\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}