{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonkim/Desktop/TestApp/Karaoke/client/src/components/APIHandler.jsx\";\nimport React, { Component } from 'react';\n\nclass APIHandler extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      console.log(JSON.stringify(body));\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"APIHandler\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Post to Server:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.post,\n            onChange: e => this.setState({\n              post: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.responseToPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default APIHandler;","map":{"version":3,"sources":["/Users/jonkim/Desktop/TestApp/Karaoke/client/src/components/APIHandler.jsx"],"names":["React","Component","APIHandler","state","response","post","responseToPost","callApi","fetch","body","json","status","Error","message","console","log","JSON","stringify","handleSubmit","e","preventDefault","method","headers","text","setState","componentDidMount","then","res","express","catch","err","render","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCE,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,cAAc,EAAE;AAHV,KADyB;;AAAA,SAajCC,OAbiC,GAavB,YAAY;AACpB,YAAMH,QAAQ,GAAG,MAAMI,KAAK,CAAC,YAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACA,UAAIN,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAZ;AACA,aAAOA,IAAP;AACD,KAnBgC;;AAAA,SAqBjCS,YArBiC,GAqBlB,MAAMC,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMhB,QAAQ,GAAG,MAAMI,KAAK,CAAC,YAAD,EAAe;AACzCa,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgC;AAKzCb,QAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAe;AAAEZ,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AAAnB,SAAf;AALmC,OAAf,CAA5B;AAOA,YAAMI,IAAI,GAAG,MAAML,QAAQ,CAACmB,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAElB,QAAAA,cAAc,EAAEG;AAAlB,OAAd;AACD,KAjCgC;AAAA;;AAOjCgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,OAAL,GACGmB,IADH,CACQC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAAEpB,MAAAA,QAAQ,EAAEuB,GAAG,CAACC;AAAhB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAFhB;AAGD;;AAwBHC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAA,oBAAI,KAAK5B,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,QAAQ,EAAE,KAAKc,YAArB;AAAA,kCACI;AAAA,mCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE,IAFtB;AAGI,YAAA,QAAQ,EAAEc,CAAC,IAAI,KAAKK,QAAL,CAAc;AAAEnB,cAAAA,IAAI,EAAEc,CAAC,CAACa,MAAF,CAASC;AAAjB,aAAd;AAHnB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAOI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI;AAAA,oBAAI,KAAK9B,KAAL,CAAWG;AAAf;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBD;;AAvDgC;;AA0DnC,eAAeJ,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass APIHandler extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n  };\n  \n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n  \n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    console.log(JSON.stringify(body));\n    return body;\n  };\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n  };\n  \nrender() {\n    return (\n        <div className=\"APIHandler\">\n            \n            <hr/>\n            <div className=\"row\">\n                <p>{this.state.response}</p>\n                <form onSubmit={this.handleSubmit}>\n                    <p><strong>Post to Server:</strong></p>\n                    <input\n                        type=\"text\"\n                        value={this.state.post}\n                        onChange={e => this.setState({ post: e.target.value })}\n                    />\n                    <button type=\"submit\">Submit</button>\n                </form>\n                <p>{this.state.responseToPost}</p>\n            </div>     \n        </div>\n    );\n  }\n}\n\nexport default APIHandler;"]},"metadata":{},"sourceType":"module"}