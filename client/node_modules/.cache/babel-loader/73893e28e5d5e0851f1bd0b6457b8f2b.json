{"ast":null,"code":"'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n} // Truncate string by size in bytes\n\n\nmodule.exports = function getByteLength(string) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var byteLength = 0;\n  var codePoint = null;\n  var prevCodePoint = null;\n\n  for (var i = 0; i < charLength; i++) {\n    codePoint = string.charCodeAt(i); // handle 4-byte non-BMP chars\n    // low surrogate\n\n    if (isLowSurrogate(codePoint)) {\n      // when parsing previous hi-surrogate, 3 is added to byteLength\n      if (prevCodePoint != null && isHighSurrogate(prevCodePoint)) {\n        byteLength += 1;\n      } else {\n        byteLength += 3;\n      }\n    } else if (codePoint <= 0x7f) {\n      byteLength += 1;\n    } else if (codePoint >= 0x80 && codePoint <= 0x7ff) {\n      byteLength += 2;\n    } else if (codePoint >= 0x800 && codePoint <= 0xffff) {\n      byteLength += 3;\n    }\n\n    prevCodePoint = codePoint;\n  }\n\n  return byteLength;\n};","map":{"version":3,"sources":["/Users/jonkim/my-app/node_modules/utf8-byte-length/browser.js"],"names":["isHighSurrogate","codePoint","isLowSurrogate","module","exports","getByteLength","string","Error","charLength","length","byteLength","prevCodePoint","i","charCodeAt"],"mappings":"AAAA;;AAEA,SAASA,eAAT,CAAyBC,SAAzB,EAAoC;AAClC,SAAOA,SAAS,IAAI,MAAb,IAAuBA,SAAS,IAAI,MAA3C;AACD;;AAED,SAASC,cAAT,CAAwBD,SAAxB,EAAmC;AACjC,SAAOA,SAAS,IAAI,MAAb,IAAuBA,SAAS,IAAI,MAA3C;AACD,C,CAED;;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC9C,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,UAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,MAAIC,UAAU,GAAGF,MAAM,CAACG,MAAxB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIT,SAAS,GAAG,IAAhB;AACA,MAAIU,aAAa,GAAG,IAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAApB,EAAgCI,CAAC,EAAjC,EAAqC;AACnCX,IAAAA,SAAS,GAAGK,MAAM,CAACO,UAAP,CAAkBD,CAAlB,CAAZ,CADmC,CAEnC;AACA;;AACA,QAAIV,cAAc,CAACD,SAAD,CAAlB,EAA+B;AAC7B;AACA,UAAIU,aAAa,IAAI,IAAjB,IAAyBX,eAAe,CAACW,aAAD,CAA5C,EAA6D;AAC3DD,QAAAA,UAAU,IAAI,CAAd;AACD,OAFD,MAGK;AACHA,QAAAA,UAAU,IAAI,CAAd;AACD;AACF,KARD,MASK,IAAIT,SAAS,IAAI,IAAjB,EAAwB;AAC3BS,MAAAA,UAAU,IAAI,CAAd;AACD,KAFI,MAGA,IAAIT,SAAS,IAAI,IAAb,IAAqBA,SAAS,IAAI,KAAtC,EAA6C;AAChDS,MAAAA,UAAU,IAAI,CAAd;AACD,KAFI,MAGA,IAAIT,SAAS,IAAI,KAAb,IAAsBA,SAAS,IAAI,MAAvC,EAA+C;AAClDS,MAAAA,UAAU,IAAI,CAAd;AACD;;AACDC,IAAAA,aAAa,GAAGV,SAAhB;AACD;;AAED,SAAOS,UAAP;AACD,CAnCD","sourcesContent":["'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function getByteLength(string) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var byteLength = 0;\n  var codePoint = null;\n  var prevCodePoint = null;\n  for (var i = 0; i < charLength; i++) {\n    codePoint = string.charCodeAt(i);\n    // handle 4-byte non-BMP chars\n    // low surrogate\n    if (isLowSurrogate(codePoint)) {\n      // when parsing previous hi-surrogate, 3 is added to byteLength\n      if (prevCodePoint != null && isHighSurrogate(prevCodePoint)) {\n        byteLength += 1;\n      }\n      else {\n        byteLength += 3;\n      }\n    }\n    else if (codePoint <= 0x7f ) {\n      byteLength += 1;\n    }\n    else if (codePoint >= 0x80 && codePoint <= 0x7ff) {\n      byteLength += 2;\n    }\n    else if (codePoint >= 0x800 && codePoint <= 0xffff) {\n      byteLength += 3;\n    }\n    prevCodePoint = codePoint;\n  }\n\n  return byteLength;\n};\n"]},"metadata":{},"sourceType":"script"}