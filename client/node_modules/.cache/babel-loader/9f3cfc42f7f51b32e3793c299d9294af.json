{"ast":null,"code":"const miniget = require(\"./__REACT_NATIVE_YTDL_CUSTOM_MODULES__/miniget\");\n/**\n * Extract string inbetween another.\n *\n * @param {string} haystack\n * @param {string} left\n * @param {string} right\n * @returns {string}\n */\n\n\nexports.between = (haystack, left, right) => {\n  let pos;\n\n  if (left instanceof RegExp) {\n    const match = haystack.match(left);\n\n    if (!match) {\n      return '';\n    }\n\n    pos = match.index + match[0].length;\n  } else {\n    pos = haystack.indexOf(left);\n\n    if (pos === -1) {\n      return '';\n    }\n\n    pos += left.length;\n  }\n\n  haystack = haystack.slice(pos);\n  pos = haystack.indexOf(right);\n\n  if (pos === -1) {\n    return '';\n  }\n\n  haystack = haystack.slice(0, pos);\n  return haystack;\n};\n/**\n * Get a number from an abbreviated number string.\n *\n * @param {string} string\n * @returns {number}\n */\n\n\nexports.parseAbbreviatedNumber = string => {\n  const match = string.replace(',', '.').replace(' ', '').match(/([\\d,.]+)([MK]?)/);\n\n  if (match) {\n    let [, num, multi] = match;\n    num = parseFloat(num);\n    return Math.round(multi === 'M' ? num * 1000000 : multi === 'K' ? num * 1000 : num);\n  }\n\n  return null;\n};\n/**\n * Match begin and end braces of input JSON, return only json\n *\n * @param {string} mixedJson\n * @returns {string}\n*/\n\n\nexports.cutAfterJSON = mixedJson => {\n  let open, close;\n\n  if (mixedJson[0] === '[') {\n    open = '[';\n    close = ']';\n  } else if (mixedJson[0] === '{') {\n    open = '{';\n    close = '}';\n  }\n\n  if (!open) {\n    throw new Error(`Can't cut unsupported JSON (need to begin with [ or { ) but got: ${mixedJson[0]}`);\n  } // States if the loop is currently in a string\n\n\n  let isString = false; // Current open brackets to be closed\n\n  let counter = 0;\n  let i;\n\n  for (i = 0; i < mixedJson.length; i++) {\n    // Toggle the isString boolean when leaving/entering string\n    if (mixedJson[i] === '\"' && mixedJson[i - 1] !== '\\\\') {\n      isString = !isString;\n      continue;\n    }\n\n    if (isString) continue;\n\n    if (mixedJson[i] === open) {\n      counter++;\n    } else if (mixedJson[i] === close) {\n      counter--;\n    } // All brackets have been closed, thus end of JSON is reached\n\n\n    if (counter === 0) {\n      // Return the cut JSON\n      return mixedJson.substr(0, i + 1);\n    }\n  } // We ran through the whole string and ended up with an unclosed bracket\n\n\n  throw Error(\"Can't cut unsupported JSON (no matching closing bracket found)\");\n};\n/**\n * Checks if there is a playability error.\n *\n * @param {Object} player_response\n * @param {Array.<string>} statuses\n * @param {Error} ErrorType\n * @returns {!Error}\n */\n\n\nexports.playError = (player_response, statuses, ErrorType = Error) => {\n  let playability = player_response && player_response.playabilityStatus;\n\n  if (playability && statuses.includes(playability.status)) {\n    return new ErrorType(playability.reason || playability.messages && playability.messages[0]);\n  }\n\n  return null;\n};\n/**\n * Temporary helper to help deprecating a few properties.\n *\n * @param {Object} obj\n * @param {string} prop\n * @param {Object} value\n * @param {string} oldPath\n * @param {string} newPath\n */\n\n\nexports.deprecate = (obj, prop, value, oldPath, newPath) => {\n  Object.defineProperty(obj, prop, {\n    get: () => {\n      console.warn(`\\`${oldPath}\\` will be removed in a near future release, ` + `use \\`${newPath}\\` instead.`);\n      return value;\n    }\n  });\n}; // Check for updates.\n\n\nconst pkg = require('../package.json');\n\nexports.lastUpdateCheck = 0;\n\nexports.checkForUpdates = () => {\n  if (!process.env.YTDL_NO_UPDATE && !pkg.version.startsWith('0.0.0-') && Date.now() - exports.lastUpdateCheck >= 1000 * 60 * 60 * 12) {\n    exports.lastUpdateCheck = Date.now();\n    return miniget('https://api.github.com/repos/fent/node-ytdl-core/releases/latest', {\n      headers: {\n        'User-Agent': 'ytdl-core'\n      }\n    }).text().then(response => {\n      if (JSON.parse(response).tag_name !== `v${pkg.version}`) {\n        console.warn(\"\\u001b[33mWARNING:\\u001b[0m react-native-ytdl is out of date! If the latest port is available, update with \\\"npm install react-native-ytdl@latest\\\".\");\n      }\n    });\n  }\n\n  return null;\n};","map":{"version":3,"sources":["/Users/jonkim/my-app/node_modules/react-native-ytdl/lib/utils.js"],"names":["miniget","require","exports","between","haystack","left","right","pos","RegExp","match","index","length","indexOf","slice","parseAbbreviatedNumber","string","replace","num","multi","parseFloat","Math","round","cutAfterJSON","mixedJson","open","close","Error","isString","counter","i","substr","playError","player_response","statuses","ErrorType","playability","playabilityStatus","includes","status","reason","messages","deprecate","obj","prop","value","oldPath","newPath","Object","defineProperty","get","console","warn","pkg","lastUpdateCheck","checkForUpdates","process","env","YTDL_NO_UPDATE","version","startsWith","Date","now","headers","text","then","response","JSON","parse","tag_name"],"mappings":"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","sourcesContent":["const miniget = require(\"./__REACT_NATIVE_YTDL_CUSTOM_MODULES__/miniget\");\n\n\n/**\n * Extract string inbetween another.\n *\n * @param {string} haystack\n * @param {string} left\n * @param {string} right\n * @returns {string}\n */\nexports.between = (haystack, left, right) => {\n  let pos;\n  if (left instanceof RegExp) {\n    const match = haystack.match(left);\n    if (!match) { return ''; }\n    pos = match.index + match[0].length;\n  } else {\n    pos = haystack.indexOf(left);\n    if (pos === -1) { return ''; }\n    pos += left.length;\n  }\n  haystack = haystack.slice(pos);\n  pos = haystack.indexOf(right);\n  if (pos === -1) { return ''; }\n  haystack = haystack.slice(0, pos);\n  return haystack;\n};\n\n\n/**\n * Get a number from an abbreviated number string.\n *\n * @param {string} string\n * @returns {number}\n */\nexports.parseAbbreviatedNumber = string => {\n  const match = string\n    .replace(',', '.')\n    .replace(' ', '')\n    .match(/([\\d,.]+)([MK]?)/);\n  if (match) {\n    let [, num, multi] = match;\n    num = parseFloat(num);\n    return Math.round(multi === 'M' ? num * 1000000 :\n      multi === 'K' ? num * 1000 : num);\n  }\n  return null;\n};\n\n\n/**\n * Match begin and end braces of input JSON, return only json\n *\n * @param {string} mixedJson\n * @returns {string}\n*/\nexports.cutAfterJSON = mixedJson => {\n  let open, close;\n  if (mixedJson[0] === '[') {\n    open = '[';\n    close = ']';\n  } else if (mixedJson[0] === '{') {\n    open = '{';\n    close = '}';\n  }\n\n  if (!open) {\n    throw new Error(`Can't cut unsupported JSON (need to begin with [ or { ) but got: ${mixedJson[0]}`);\n  }\n\n  // States if the loop is currently in a string\n  let isString = false;\n\n  // Current open brackets to be closed\n  let counter = 0;\n\n  let i;\n  for (i = 0; i < mixedJson.length; i++) {\n    // Toggle the isString boolean when leaving/entering string\n    if (mixedJson[i] === '\"' && mixedJson[i - 1] !== '\\\\') {\n      isString = !isString;\n      continue;\n    }\n    if (isString) continue;\n\n    if (mixedJson[i] === open) {\n      counter++;\n    } else if (mixedJson[i] === close) {\n      counter--;\n    }\n\n    // All brackets have been closed, thus end of JSON is reached\n    if (counter === 0) {\n      // Return the cut JSON\n      return mixedJson.substr(0, i + 1);\n    }\n  }\n\n  // We ran through the whole string and ended up with an unclosed bracket\n  throw Error(\"Can't cut unsupported JSON (no matching closing bracket found)\");\n};\n\n\n/**\n * Checks if there is a playability error.\n *\n * @param {Object} player_response\n * @param {Array.<string>} statuses\n * @param {Error} ErrorType\n * @returns {!Error}\n */\nexports.playError = (player_response, statuses, ErrorType = Error) => {\n  let playability = player_response && player_response.playabilityStatus;\n  if (playability && statuses.includes(playability.status)) {\n    return new ErrorType(playability.reason || (playability.messages && playability.messages[0]));\n  }\n  return null;\n};\n\n\n/**\n * Temporary helper to help deprecating a few properties.\n *\n * @param {Object} obj\n * @param {string} prop\n * @param {Object} value\n * @param {string} oldPath\n * @param {string} newPath\n */\nexports.deprecate = (obj, prop, value, oldPath, newPath) => {\n  Object.defineProperty(obj, prop, {\n    get: () => {\n      console.warn(`\\`${oldPath}\\` will be removed in a near future release, ` +\n        `use \\`${newPath}\\` instead.`);\n      return value;\n    },\n  });\n};\n\n\n// Check for updates.\nconst pkg = require('../package.json');\nexports.lastUpdateCheck = 0;\nexports.checkForUpdates = () => {\n  if (!process.env.YTDL_NO_UPDATE && !pkg.version.startsWith('0.0.0-') &&\n    Date.now() - exports.lastUpdateCheck >= 1000 * 60 * 60 * 12) {\n    exports.lastUpdateCheck = Date.now();\n    return miniget('https://api.github.com/repos/fent/node-ytdl-core/releases/latest', {\n      headers: { 'User-Agent': 'ytdl-core' },\n    }).text().then(response => {\n      if (JSON.parse(response).tag_name !== `v${pkg.version}`) {\n        console.warn(\"\\u001b[33mWARNING:\\u001b[0m react-native-ytdl is out of date! If the latest port is available, update with \\\"npm install react-native-ytdl@latest\\\".\");\n      }\n    });\n  }\n  return null;\n};\n"]},"metadata":{},"sourceType":"script"}